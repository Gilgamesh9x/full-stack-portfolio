@import url("https://fonts.googleapis.com/css2?family=Caveat&family=Playfair+Display&family=Poppins:wght@400;500;600;700;800;900&display=swap");

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box; /* when you set the height and the width of an element, this ensures that these dimensions include the content, padding, and border of the element. */
  text-decoration: none;
  border: none;
  outline: none;
  scroll-behavior: none;
  font-family: "Poppins", sans-serif;
}

:root {
  --bg-color: #081b29;
  --second-bg-color: #112e42;
  --text-color: #ededed;
  --main-color: #00abf0;
}

html {
  font-size: 62.5%;
  overflow-x: hidden; /* hides any elements that exceed the width of the container */
}

body {
  background: var(--bg-color);
  color: var(--text-color);
}

.header {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  padding: 2rem 9%; /* top&bottom - left&right */
  background-color: transparent;
  display: flex;
  justify-content: space-between;
  align-items: center;
  z-index: 100; /* this will show on top of anything else */
  transition: 0.3s;
}

.header.sticky {
  background: var(--bg-color);
}

.logo {
  font-size: 2.5rem;
  color: var(--text-color);
  font-weight: 600;
}

.navbar a {
  /* this is parent children relation*/
  font-size: 1.7rem;
  color: var(--text-color);
  font-weight: 500;
  margin: 3.5rem;
  transition: 0.3s; /*  when an animation is applied to these elements, it takes 0.3 seconds to complete */
}

.navbar a:hover,
.navbar a.active {
  /* here we are selecting a tags (the children of the navbar class and we are selecting the child of a tag which is active */
  color: var(--main-color);
}

#menu-icon {
  font-size: 3.6rem;
  color: var(--text-color);
  cursor: pointer;
  display: none; /* it hides the element */
}

section {
  min-height: 100vh;
  padding: 10rem 9% 2rem; /* top, right&left, bottom*/
}

.home {
  display: flex;
  align-items: center;
  width: 100%;
  padding: 0 9%;
  background: url("./images/home.jpg") no-repeat;
  /* The background image will be scaled up or down to completely cover the entire content box of the element without distorting the image's aspect ratio. */
  background-size: cover;
  /* The center of the background image will be aligned with the center of the element both horizontally and vertically. */
  background-position: center;
}

.home-content {
  width: 65rem;
  z-index: 99; /* so it will go over the image when the page shrinks */
}

.home-content h1 {
  font-size: 5.6rem;
  font-weight: 700;
  line-height: 1.3;
}

.home-content h1 span {
  color: var(--text-color);
}

.home-content .text-animate {
  position: relative;
  width: 35rem;
}

.home-content .text-animate h3 {
  font-size: 3.2rem;
  font-weight: 700;
  color: transparent;
  -webkit-text-stroke: 0.7px var(--main-color);
  /* animation starts here */
  background-image: linear-gradient(var(--main-color), var(--main-color));
  background-repeat: no-repeat;
  -webkit-background-clip: text;
  background-position: -33rem 0;
  animation: homeBgText 6s linear infinite;
  animation-delay: 2s;
}

.home-content .text-animate h3::before {
  /* for the animation */
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 100%;
  border-right: 2px solid var(--main-color);
  animation: homeCursorText 6s linear infinite;
  z-index: -1;
  animation-delay: 2s;
}

.home-content p {
  font-size: 1.6rem;
  margin: 2rem 0 4rem;
}

.btn-box {
  position: relative;
  display: flex;
  justify-content: space-between;
  width: 34.5rem;
  height: 5rem;
}

.btn-box .btn {
  position: relative; /* this makes it so when you hover and let go, the effect stops */
  display: inline-flex;
  justify-content: center;
  align-items: center;
  width: 15rem;
  height: 100%;
  background-color: var(--main-color);
  border: 0.2rem solid var(--main-color);
  border-radius: 0.8rem;
  font-size: 1.8rem;
  font-weight: 600;
  letter-spacing: 0.1rem;
  color: var(--bg-color);
  z-index: 1;
  overflow: hidden;
  transition: 0.5s; /* for the slide effect to take 0.5s*/
}

.btn-box .btn::before {
  /* this creates the left to right slide effect and adds the color after the effect */
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 100%;
  background: var(--bg-color);
  z-index: -1;
  transition: 0.5s;
}

.btn-box .btn:hover {
  /* this will change the color of the text so it wouldn't be invisible because of the background color */
  color: var(--main-color);
}

.btn-box .btn:hover::before {
  /* the completion of the slide effect for the first button */
  width: 100%;
}

.btn-box .btn:nth-child(2) {
  /* this changed the style of the second button */
  background: transparent;
  color: var(--main-color);
}

.btn-box .btn:nth-child(2):hover {
  color: var(--bg-color);
}

.btn-box .btn:nth-child(2)::before {
  /* the completion of the slide effect for the second button */
  background-color: var(--main-color);
}

.home-sci {
  position: absolute;
  bottom: 4rem;
  width: 250px;
  display: flex;
  justify-content: space-between;
}

.home-sci a {
  position: relative;
  display: inline-flex; /* always use this when you have a list of elements inside a div like a tags or a nav bar */
  justify-content: center;
  align-items: center;
  width: 60px;
  height: 60px;
  background: transparent;
  border: 0.2rem solid var(--main-color);
  border-radius: 50%;
  font-size: 20px;
  color: var(--main-color);
  z-index: 1;
  overflow: hidden;
  transition: 0.5s;
}

.home-sci a:hover {
  color: var(--bg-color);
}

.home-sci a:hover::before {
  width: 100%;
}

.home-sci a::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 100%;
  background: var(--main-color);
  z-index: -1;
  transition: 0.5s;
}

.home-imgHover {
  position: absolute;
  top: 0;
  right: 0;
  width: 45%;
  height: 100%;
  background-color: transparent;
  transition: 3s;
}

.home-imgHover:hover {
  background-color: var(--bg-color);
  opacity: 0.8;
}

.about {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 2rem;
  background: var(--second-bg-color);
  padding-bottom: 6rem;
}

.heading {
  font-size: 5rem;
  margin-bottom: 3rem;
  text-align: center;
}

span {
  color: var(--main-color);
}

.about-img {
  position: relative;
  width: 25rem;
  height: 25rem;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.about-img img {
  width: 90%;
  border-radius: 50%;
  border: 0.2rem solid var(--main-color);
}

.about-img .circle-spin {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) rotate(0);
  width: 100%;
  height: 100%;
  border-radius: 50%;
  border-top: 0.2rem solid var(--second-bg-color);
  border-bottom: 0.2rem solid var(--second-bg-color);
  border-left: 0.2rem solid var(--main-color);
  border-right: 0.2rem solid var(--main-color);
  /* animation starts here */
  animation: aboutSpinner 8s linear infinite;
}

.about-content {
  text-align: center;
}

.about-content h3 {
  font-size: 2.6rem;
}

.about-content p {
  font-size: 1.6rem;
  margin: 2rem 0 3rem;
}

.btn-box.btns {
  display: inline-block; /* so it would fit only the content instead of the whole block */
  width: 15rem;
}

.btn-box.btns a::before {
  background: var(--second-bg-color);
}

.education {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  min-height: auto; /* it will only fit the content */
  padding-bottom: 5rem;
}

.education .education-row {
  display: flex;
  flex-wrap: wrap; /* if the item's width exceeds the container's width, the next item will go to the next line */
  gap: 5rem;
}

.education-row .education-column {
  flex: 1 1 40rem;
}

.education-column .title {
  font-size: 2.5rem;
  margin: 0 0 1.5rem 2rem;
}

.education-column .education-box {
  border-left: 0.2rem solid var(--main-color);
}

.education-box .education-content {
  position: relative;
  padding-left: 2rem;
}

.education-box .education-content::before {
  content: "";
  position: absolute;
  top: 0;
  left: -1.1rem;
  width: 2rem;
  height: 2rem;
  background-color: var(--main-color);
  border-radius: 50%;
}

.education-content .content {
  position: relative; /* here we used this for two reasons. One is to use the z-index property and second, to use the absolute position in the child element */
  padding: 1.5rem;
  border: 0.2rem solid var(--main-color);
  border-radius: 0.6rem;
  margin-bottom: 2rem;
  overflow: hidden;
}

.education-content .content::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 100%;
  background: var(--second-bg-color);
  z-index: -1;
}

.education-content .content:hover:before {
  width: 100%;
}

.education-content .content .year {
  font-size: 1.5rem;
  color: var(--main-color);
  padding-bottom: 0.5rem;
}

.education-content .content .year i {
  padding-right: 0.5rem;
}

.education-content .content h3 {
  font-size: 2rem;
}

.education-content .content p {
  font-size: 1.6rem;
  padding-top: 0.5rem;
}

.skills {
  min-height: auto;
  padding-bottom: 7rem;
  background: var(--second-bg-color);
}

.skills .skills-row {
  display: flex;
  flex-wrap: wrap;
  gap: 5rem;
}

.skills-row .skills-column {
  flex: 1 1 40rem;
}

.skills-column .title {
  font-size: 2.5rem;
  margin: 0 0 1.5rem;
}

.skills-box .skills-content {
  position: relative;
  border: 0.2rem solid var(--main-color);
  border-radius: 0.6rem;
  padding: 0.5rem 1.5rem;
  z-index: 1;
  overflow: hidden;
}

.skills-box .skills-content::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 100%;
  background-color: var(--bg-color);
  z-index: -1;
}

.skills-box .skills-content:hover::before {
  width: 100%;
}

.skills-content .progress {
  padding: 1rem 0;
}

.skills-content .progress h3 {
  font-size: 1.7rem;
  display: flex;
  justify-content: space-between;
}

.skills-content .progress h3 span {
  color: var(--text-color);
}

.skills-content .progress .bar {
  height: 2.5rem;
  border-radius: 0.6rem;
  border: 0.2rem solid var(--main-color);
  padding: 0.5rem;
  margin: 1rem 0;
}

.skills-content .progress .bar span {
  display: block;
  height: 100%;
  border-radius: 0.3rem;
  background: var(--main-color);
}

.skills-column:nth-child(1) .skills-content .progress:nth-child(1) .bar span {
  width: 90%;
}

.skills-column:nth-child(1) .skills-content .progress:nth-child(2) .bar span {
  width: 80%;
}

.skills-column:nth-child(1) .skills-content .progress:nth-child(3) .bar span {
  width: 65%;
}

.skills-column:nth-child(1) .skills-content .progress:nth-child(4) .bar span {
  width: 75%;
}

/* */

.skills-column:nth-child(2) .skills-content .progress:nth-child(1) .bar span {
  width: 95%;
}

.skills-column:nth-child(2) .skills-content .progress:nth-child(2) .bar span {
  width: 67%;
}

.skills-column:nth-child(2) .skills-content .progress:nth-child(3) .bar span {
  width: 85%;
}

.skills-column:nth-child(2) .skills-content .progress:nth-child(4) .bar span {
  width: 60%;
}

.contact {
  min-height: auto;
  padding-bottom: 7rem;
}

.contact form {
  max-width: 70rem;
  margin: 0 auto;
}

.contact form .input-box {
  position: relative;
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap; /* here, if the width of the items is specified, if it can't aplly that width, it will go to the next line*/
}

.contact form .input-box .input-field {
  position: relative;
  width: 49%;
  margin: 0.8rem 0;
}

.contact form .input-box .input-field input {
  width: 100%;
  height: 100%;
  padding: 1.5rem;
  font-size: 1.6rem;
  color: var(--text-color);
  background-color: transparent;
  border-radius: 0.6rem;
  border: 0.2rem solid var(--main-color);
}

.contact form .textarea-field textarea {
  width: 100%;
  height: 40%;
  padding: 1.5rem;
  font-size: 1.6rem;
  color: var(--text-color);
  background-color: transparent;
  border-radius: 0.6rem;
  border: 0.2rem solid var(--main-color);
  resize: none;
}

.contact form .input-box .input-field input::placeholder {
  color: var(--text-color);
}

.contact form .textarea-field textarea::placeholder {
  color: var(--text-color);
}

.contact form .textarea-field {
  position: relative;
  margin: 0.8rem 0 2.7rem;
  display: flex;
}

.contact form .btn-box.btns .btn {
  cursor: pointer;
}

.contact form .focus {
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 100%;
  background: var(--second-bg-color);
  border-radius: 0.6rem;
  z-index: -1;
  transition: 0.5s;
}
.contact form .input-box .input-field input:focus~.focus, /* this activates the style when the field is selected */
.contact form .input-box .input-field input:valid~.focus, /* this activates the style when input inside the field is valid (when the user writes something) */
.contact form .textarea-field textarea:focus~.focus, 
.contact form .textarea-field textarea:valid~.focus {
  width: 100%;
}

.footer {
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap;
  background-color: var(--second-bg-color);
}

.footer-text p {
  font-size: 1.6rem;
}

.footer-iconTop a {
  position: relative;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  padding: 0.8rem;
  background-color: var(--main-color);
  border: 0.2rem solid var(--main-color);
  border-radius: 0.6rem;
  z-index: 1;
  overflow: hidden;
}

.footer-iconTop a::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 100%;
  background: var(--second-bg-color);
  z-index: -1;
  transition: 0.5s;
  color: var(--main-color);
}

.footer-iconTop a:hover::before {
  width: 100%;
}

.footer-iconTop a i {
  font-size: 2.4rem;
  color: var(--bg-color);
  transition: 0.5s;
}

.footer-iconTop a:hover i {
  color: var(--main-color);
}

/* BreakPoints */

@media (max-width: 1200px) {
  html {
    font-size: 55%;
  }
}

@media (max-width: 991px) {
  .header {
    padding: 2rem 4%;
  }
}

@media (max-width: 991px) {
  .header {
    padding: 2rem 4%;
  }

  section {
    padding: 10rem 4% 2rem;
  }

  .home {
    padding: 0 4%;
  }

  .footer {
    padding: 2rem 4%;
  }
}

@media (max-width: 850px) {
  .animate.home-img {
    width: 55%;
  }
}

@media (max-width: 768px) {
  .header {
    background: var(--bg-color);
  }

  #menu-icon {
    display: block;
  }

  .navbar {
    position: absolute;
    top: 100%; /* this means right below the header */
    left: -100%; /* when it is set to 0, it is positioned to the left edge of its closest positioned ancestor. */
    width: 100%;
    padding: 1rem 4%;
    background: var(--bg-color);
    box-shadow: 0.5rem 1rem rgba(0, 0, 0, 0.2);
    z-index: 1;
    transition: 0.25s ease;
    transition-delay: 0.25s;
  }

  .navbar.active {
    left: 0;
    transition-delay: 0s;
  }

  .navbar a {
    display: block;
    font-size: 2rem;
    margin: 3rem 0;
  }

  .home-imgHover {
    pointer-events: none; /* this will disable the hover effect */
    background: var(--bg-color);
    opacity: 0.6;
  }
}

@media (max-width: 520px) {
  html {
    font-size: 50%;
  }

  .home-sci {
    width: 160px;
  }

  .home-sci a {
    width: 38px;
    height: 38px;
  }
}

@media (max-width: 462px) {
  .home-content h1 {
    font-size: 5.2rem;
  }

  .education {
    padding: 10rem 4% 5rem 5%;
  }

  .contact form .input-box .input-field {
    width: 100%;
  }

  .footer {
    flex-direction: column-reverse; /* we will switch to column and we will start from bottom to right, so the first item will be at bottom and the second item will be at top */
  }

  .footer p {
    margin-top: 2rem;
    text-align: center;
  }
}

@media (max-width: 371px) {
  .home {
    justify-content: center;
  }

  .home-content {
    display: flex;
    align-items: center;
    flex-direction: column;
    text-align: center;
  }

  .home-content h1 {
    font-size: 5rem;
  }
}

/* Key Framework animation */

@keyframes homeBgText {
  0%,
  10%,
  100% {
    background-position: -33rem 0;
  }

  65%,
  85% {
    background-position: 0 0;
  }
}

@keyframes homeCursorText {
  0%,
  10%,
  100% {
    width: 0;
  }

  65%,
  85% {
    width: 100%;
    opacity: 1;
  }

  75%,
  81% {
    opacity: 0;
  }
}

@keyframes aboutSpinner {
  100% {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}
